@using PX.Core.Configurations
@using PX.Core.Ultilities
@{
    ViewBag.Title = T("My Profiles");
    ViewBag.Description = T("Manage my profile");
}

@section styles
{
    <link rel="stylesheet" href="/Content/BackEnd/css/jquery-ui-1.10.3.custom.min.css" />
    <link rel="stylesheet" href="/Content/BackEnd/css/jquery.gritter.css" />
    <link rel="stylesheet" href="/Content/BackEnd/css/select2.css" />
    <link rel="stylesheet" href="/Content/BackEnd/css/bootstrap-editable.css" />
    <style type="text/css">
        #map-canvas
        {
            width: 100%;
            height: 300px;
        }
    </style>
}

<div class="page-header">
    <h1>
        @ViewBag.Title
    </h1>
</div>
<div class="row">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="tabbable">
            <ul class="nav nav-tabs" id="myTab">
                <li class="active">
                    <a data-toggle="tab" href="#profile">
                        <i class="green icon-home bigger-110"></i>
                        My Profile
                    </a>
                </li>

                <li>
                    <a data-toggle="tab" href="#change-password">
                        <i class="green icon-lock bigger-110"></i>Change Password
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div id="profile" class="tab-pane in active">
                    <div id="user-profile-1" class="user-profile row">
                        <div class="col-xs-12 col-sm-3 center">
                            <div>
                                <span class="profile-picture">
                                    <img id="avatar" class="editable img-responsive" alt="Alex's Avatar" src="@CurrentUser.AvatarPath" />
                                </span>
                                <div class="space-4"></div>

                                <div class="width-80 label label-info label-xlg arrowed-in arrowed-in-right">
                                    <div class="inline position-relative">
                                        <a href="javascript:void(0)" class="user-title-label">
                                            <i class="icon-circle light-green middle"></i>
                                            &nbsp;<span class="white">@CurrentUser.FullName</span>
                                        </a>
                                    </div>
                                </div>
                            </div>

                            <div class="hr hr16 dotted"></div>
                        </div>
                        <div class="col-xs-12 col-sm-9">

                            <div class="profile-user-info profile-user-info-striped">
                                <div class="profile-info-row">
                                    <div class="profile-info-name">Email </div>

                                    <div class="profile-info-value">
                                        <span>@CurrentUser.Email</span>
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name">First Name </div>

                                    <div class="profile-info-value">
                                        <span class="editable editable-text" data-name="FirstName">@CurrentUser.FirstName</span>
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name">Last Name </div>

                                    <div class="profile-info-value">
                                        <span class="editable editable-text" data-name="LastName">@CurrentUser.LastName</span>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">Phone </div>

                                    <div class="profile-info-value">
                                        <span class="editable editable-text" data-name="Phone">@CurrentUser.Phone</span>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">Indentity Number </div>

                                    <div class="profile-info-value">
                                        <span class="editable editable-text" data-name="IdentityNumber">@CurrentUser.IdentityNumber</span>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">Last Online </div>

                                    <div class="profile-info-value">
                                        <span id="login">@CurrentUser.LastLoginHours.ToString("0") hours ago</span>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">Birthday </div>

                                    <div class="profile-info-value">
                                        <span class="editable date" data-name="BirthDay">@(CurrentUser.BirthDay.HasValue ? CurrentUser.BirthDay.ToShortDateString() : DateTime.Now.ToShortDateString())</span>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">Join </div>

                                    <div class="profile-info-value">
                                        <span>@CurrentUser.Created.ToLongDateString()</span>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">Address </div>

                                    <div class="profile-info-value">
                                        <input id="address-input" class="controls" type="text" placeholder="Enter a location" value="@CurrentUser.Address" />
                                        <div id="address-buttons" class="controls" style="">
                                            <input id="save-address-btn" class="btn btn-xs btn-info" type="button" value="Save" />
                                            <input class="btn btn-xs btn-white" type="button" value="Clear" />
                                        </div>
                                        <div id="map-canvas"></div>
                                    </div>
                                </div>

                                <div class="profile-info-row">
                                    <div class="profile-info-name">About Me </div>

                                    <div class="profile-info-value">
                                        <span class="editable editable-textarea" data-name="About">@CurrentUser.About</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="change-password" class="tab-pane">
                    @Html.Action("ChangePassword")
                </div>
            </div>
        </div>
        <!-- PAGE CONTENT ENDS -->
    </div>
    <!-- /.col -->
</div>
<!-- /.row -->
@section scripts{

    <script src="/Scripts/BackEnd/jquery-ui-1.10.3.custom.min.js"></script>
    <script src="/Scripts/BackEnd/jquery.ui.touch-punch.min.js"></script>
    <script src="/Scripts/BackEnd/bootstrap-wysiwyg.min.js"></script>
    <script src="/Scripts/BackEnd/date-time/bootstrap-datepicker.min.js"></script>
    <script src="/Scripts/BackEnd/x-editable/bootstrap-editable.min.js"></script>
    <script src="/Scripts/BackEnd/x-editable/ace-editable.min.js"></script>
    <script src="/Scripts/BackEnd/jquery.maskedinput.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
    <script src="/Scripts/Shared/googleMapApi.js"></script>
    <script type="text/javascript">
        
        jQuery(function ($) {
            $("#save-address-btn").click(function() {
                var url = '@Url.Action("UpdateUserData", new { Pk = CurrentUser.Id })';
                var data = { Name : 'Address', Value: $("#address-input").val()};
                $.ajax({
                    type: 'POST',
                    url: url,     
                    data: data,
                    success: function (response) {
                        ShowMessage(response);
                    }
                });
            });

            //editables on first profile page
            $.fn.editable.defaults.mode = 'inline';
            $.fn.editableform.loading = "<div class='editableform-loading'><i class='light-blue icon-2x icon-spinner icon-spin'></i></div>";
            $.fn.editableform.buttons = '<button type="submit" class="btn btn-info editable-submit"><i class="icon-ok icon-white"></i></button>' +
                '<button type="button" class="btn editable-cancel"><i class="icon-remove"></i></button>';
            
            //editables 
            $('.editable-text').editable({
                type: 'text',
                pk: '@CurrentUser.Id',
                url: '@Url.Action("UpdateUserData")',
                ajaxOptions: {
                    type: 'post',
                    dataType: 'json'
                },
                success: function (response) {
                    ShowMessage(response);
                    if(!response.Success)
                        return response.Message;
                }
            });

            $('.editable-textarea').editable({
                type: 'textarea',
                placeholder: "Something about yourself",
                pk: '@CurrentUser.Id',
                url: '@Url.Action("UpdateUserData")',
                ajaxOptions: {
                    type: 'post',
                    dataType: 'json'
                },
                success: function (response) {
                    ShowMessage(response);
                    if(!response.Success)
                        return response.Message;
                }
            });
            

            $('.date').editable({
                type: 'date',
                format: 'dd/mm/yyyy',
                viewformat: 'dd/mm/yyyy',
                datepicker: {
                    weekStart: 1
                },
                pk: '@CurrentUser.Id',
                url: '@Url.Action("UpdateUserData")',
                ajaxOptions: {
                    type: 'post',
                    dataType: 'json'
                },
                success: function (response) {
                    ShowMessage(response);
                    if(!response.Success)
                        return response.Message;
                }
            });
            
            // *** editable avatar *** //
            try {//ie8 throws some harmless exception, so let's catch it

                //it seems that editable plugin calls appendChild, and as Image doesn't have it, it causes errors on IE at unpredicted points
                //so let's have a fake appendChild for it!
                if (/msie\s*(8|7|6)/.test(navigator.userAgent.toLowerCase()))
                    Image.prototype.appendChild = function() {
                    };

                var lastGritter;
                $('#avatar').editable({
                    type: 'image',
                    name: 'avatar',
                    value: null,
                    image: {
                        //specify ace file input plugin's options here
                        btn_choose: 'Change Avatar',
                        droppable: true,
                        /**
                        //this will override the default before_change that only accepts image files
                        before_change: function(files, dropped) {
                            return true;
                        },
                        */

                        //and a few extra ones here
                        name: 'avatar',//put the field name here as well, will be used inside the custom plugin
                        max_size: @(SValue<int>(SettingNames.MaxSizeUploaded)),
                        on_error: function(code) { //on_error function will be called when the selected file has a problem
                            if (lastGritter) $.gritter.remove(lastGritter);
                            if (code == 1) { //file format error
                                lastGritter = $.gritter.add({
                                    title: 'File is not an image!',
                                    text: 'Please choose a jpg|gif|png image!',
                                    class_name: 'gritter-error gritter-center'
                                });
                            } else if (code == 2) { //file size rror
                                lastGritter = $.gritter.add({
                                    title: 'File too big!',
                                    text: 'Image size should not exceed' +  @(SValue<int>("MaxSizeUploaded") / (1024 * 1024)) + ' MB!',
                                    class_name: 'gritter-error gritter-center'
                                });
                            } else { //other error
                            }
                        },
                        on_success: function() {
                            $.gritter.removeAll();
                        }
                    },
                    url: function(params) {
                        //please modify submit_url accordingly
                        var submitUrl = '@Url.Action("UploadAvatar")';
                        var deferred;


                        //if value is empty, means no valid files were selected
                        //but it may still be submitted by the plugin, because "" (empty string) is different from previous non-empty value whatever it was
                        //so we return just here to prevent problems
                        var value = $('#avatar').next().find('input[type=hidden]:eq(0)').val();
                        if (!value || value.length == 0) {
                            deferred = new $.Deferred;
                            deferred.resolve();
                            return deferred.promise();
                        }

                        var $form = $('#avatar').next().find('.editableform:eq(0)');
                        var fileInput = $form.find('input[type=file]:eq(0)');

                        //user iframe for older browsers that don't support file upload via FormData & Ajax
                        if (!("FormData" in window)) {
                            deferred = new $.Deferred;

                            var iframeId = 'temporary-iframe-' + (new Date()).getTime() + '-' + (parseInt(Math.random() * 1000));
                            $form.after('<iframe id="' + iframeId + '" name="' + iframeId + '" frameborder="0" width="0" height="0" src="about:blank" style="position:absolute;z-index:-1;"></iframe>');
                            $form.append('<input type="hidden" name="temporary-iframe-id" value="' + iframeId + '" />');
                            $form.next().data('deferrer', deferred); //save the deferred object to the iframe
                            $form.attr({
                                'method': 'POST',
                                'enctype': 'multipart/form-data',
                                'target': iframeId,
                                'action': submitUrl
                            });

                            $form.get(0).submit();

                            //if we don't receive the response after 60 seconds, declare it as failed!
                            setTimeout(function() {
                                var iframe = document.getElementById(iframeId);
                                if (iframe != null) {
                                    iframe.src = "about:blank";
                                    $(iframe).remove();

                                    deferred.reject({ 'status': 'fail', 'message': 'Timeout!' });
                                }
                            }, 60000);
                        } else {
                            var fd;
                            try {
                                fd = new FormData($form.get(0));
                            } catch(ex) {
                                //IE10 throws "SCRIPT5: Access is denied" exception,
                                //so we need to add the key/value pairs one by one
                                fd = new FormData();
                                $.each($form.serializeArray(), function(index, item) {
                                    fd.append(item.name, item.value);
                                });
                                //and then add files because files are not included in serializeArray()'s result
                                $form.find('input[type=file]').each(function() {
                                    if (this.files.length > 0) fd.append(this.getAttribute('name'), this.files[0]);
                                });
                            }

                            //if file has been drag&dropped , append it to FormData
                            if (fileInput.data('ace_input_method') == 'drop') {
                                var files = fileInput.data('ace_input_files');
                                if (files && files.length > 0) {
                                    fd.append(fileInput.attr('name'), files[0]);
                                }
                            }

                            deferred = $.ajax({
                                url: submitUrl,
                                type: 'POST',
                                processData: false,
                                contentType: false,
                                dataType: 'json',
                                data: fd,
                                xhr: function() {
                                    var req = $.ajaxSettings.xhr();
                                    return req;
                                },
                                beforeSend: function() {
                                },
                                success: function() {
                                }
                            });
                        }

                        deferred.done(function(response) {
                            if (response.Success) {
                                $('#avatar').get(0).src = response.Data;
                            }
                        }).fail(function(response) {
                            alert("Failure");
                        });


                        return deferred.promise();
                    },

                    success: function(response, newValue) {
                        ShowMessage(response);
                    }
                });
                } catch (e) { }
        });
    </script>
}