@using PX.Core.Framework.Enums
@model PX.Business.Models.Pages.PageManageModel
@Html.HiddenFor(m => m.Id)
<div class="form-group">
    <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
        @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Title", "Title", new { @class = "col-xs-12 no-padding-right", @for = "Title" })
        <div class="space-4"></div>
        @Html.TextBoxFor(m => m.Title, new { @class = "col-xs-12", placeholder = T("AdminModule:::Pages:::Form:::Title place holder", "Please input page title") })
        @Html.ValidationMessageFor(m => m.Title)
    </div>
    <div class="col-xs-12 col-sm-9 col-md-4 col-lg-4">
        @MText(Tags.Label, "AdminModule:::Pages:::Forms:::FriendlyUrl", "Friendly Url", new { @class = "col-xs-12 no-padding-right", @for = "FriendlyUrl" })
        <div class="space-4"></div>
        @Html.TextBoxFor(m => m.FriendlyUrl, new { @class = "col-xs-12" })
        @Html.ValidationMessageFor(m => m.FriendlyUrl)
    </div>
    <div class="col-xs-12 col-sm-3 col-md-4 col-lg-4">
        @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Status", "Status", new { @class = "col-xs-12 no-padding-right", @for = "Status" })
        <div class="space-4"></div>
        @Html.DropDownListFor(m => m.Status, Model.StatusList, new { @class = "col-xs-12" })
        @Html.ValidationMessageFor(m => m.Status)
    </div>
</div>
<div class="space-4"></div>
<div class="form-group">
    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Parent Page Dropdown", "Parent", new { @class = "col-sm-1 no-padding-right", @for = "ParentId" })
    <div class="col-sm-11">
        @Html.DropDownListFor(m => m.ParentId, Model.Parents, "..Select parent page..", new { @class = "form-control col-xs-10 col-sm-4", id = "selectParents" })
        @Html.ValidationMessageFor(m => m.ParentId)
    </div>
</div>
<div class="space-4"></div>
<div class="form-group">
    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Position", "Position", new { @class = "col-xs-12 col-sm-1 no-padding-right", @for = "Position" })
    <div class="col-xs-4 col-sm-4">
        @Html.DropDownListFor(m => m.Position, Model.Positions, new { @class = "col-xs-12" })
        @Html.ValidationMessageFor(m => m.Position)
    </div>
    <div class="col-xs-8 col-sm-7">
        @Html.DropDownListFor(m => m.RelativePageId, Model.RelativePages, new { @class = "col-xs-12", id = "selectRelativePages" })
        @Html.ValidationMessageFor(m => m.RelativePageId)
    </div>
</div>
<div class="space-4"></div>
<div class="form-group">
    <div class="col-xs-12">
        @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Caption", "Caption", new { @class = "col-xs-12 no-padding-right", @for = "Caption" })
        <div class="space-4"></div>
        @Html.TextAreaFor(m => m.Caption, new { @class = "col-xs-12", placeholder = T("AdminModule:::Pages:::Form:::Caption place holder", "Please input page caption") })
        @Html.ValidationMessageFor(m => m.Caption)
    </div>
</div>
<div class="space-4"></div>
<div class="form-group">
    <div class="col-sm-12">
        @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Content", "Content", new { @class = "col-sm-1 no-padding-right", @for = "Content" })
        <div class="btn-group col-sm-11">
            <button class="btn btn-xs dropdown-toggle" data-toggle="dropdown">
                @MText(Tags.Text, "AdminModule:::Pages:::Forms:::AddCurlyBracket", "Add curly bracket")
                <span class="icon-angle-down icon-on-right bigger-110"></span>
            </button>
            <ul id="curlyBracketList" class="dropdown-menu">
            </ul>
        </div>
        <div class="space-4" style="clear: both"></div>
        @Html.TextAreaFor(m => m.Content, new { @class = "col-sm-12", id = "pageContent" })
        @Html.ValidationMessageFor(m => m.Content)
    </div>
</div>
<div class="space-4"></div>
<div class="row">
    <div class="tabbable">
        <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="myTab4">
            <li class="active">
                <a data-toggle="tab" href="#tags">Tags</a>
            </li>

            <li>
                <a data-toggle="tab" href="#advanceSetting">Advanced Settings</a>
            </li>

            <li>
                <a data-toggle="tab" href="#publishingDates">Publishing dates</a>
            </li>
        </ul>
        <div class="tab-content">
            <div id="tags" class="tab-pane in active">
                <div class="form-group">
                    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Tags", "Tags", new { @class = "col-sm-1 no-padding-right control-label", @for = "PageTemplateId" })
                    <div class="col-sm-11">
                        @Html.ListBoxFor(m => m.Tags, Model.TagList, new { @class = "form-control chosen-select tag-input-style", multiple = "multiple" })
                        @Html.ValidationMessageFor(m => m.Tags)
                    </div>
                </div>
            </div>

            <div id="advanceSetting" class="tab-pane">
                <div class="form-group">
                    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::IncludeInSiteNavigation", "Include In Site Navigation", new { @class = "col-xs-7 col-sm-3 no-padding-right control-label", @for = "PageTemplateId" })
                    <div class="col-xs-3 col-sm-9">
                        @Html.CheckBoxFor(m => m.IncludeInSiteNavigation)
                        @Html.ValidationMessageFor(m => m.IncludeInSiteNavigation)
                    </div>
                </div>
                <div class="form-group">
                    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::Template", "Template", new { @class = "col-sm-3 no-padding-right control-label", @for = "PageTemplateId" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.PageTemplateId, Model.PageTemplates, "..Select template..", new { @class = "form-control col-xs-10 col-sm-4" , id = "selectPageTemplates"})
                        @Html.ValidationMessageFor(m => m.PageTemplateId)
                    </div>
                </div>
                <div class="form-group">
                    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::FileTemplate", "File Template", new { @class = "col-sm-3 no-padding-right control-label", @for = "FileTemplateId" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.FileTemplateId, Model.FileTemplates, "..Select file template..", new { @class = "form-control col-xs-10 col-sm-4", id = "selectFileTemplates" })
                        @Html.ValidationMessageFor(m => m.FileTemplateId)
                    </div>
                </div>
            </div>

            <div id="publishingDates" class="tab-pane">
                <div class="form-group">
                    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::StartPublishingDate", "Start Publishing Date", new { @class = "col-sm-2 no-padding-right control-label", @for = "StartPublishingDate" })
                    <div class="col-sm-10">
                        <div class="input-group col-sm-4">
                            @Html.TextBoxFor(m => m.StartPublishingDate, new { @class = "form-control col-xs-12 date-picker" })
                            <span class="input-group-addon">
                                <i class="icon-calendar bigger-110"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.StartPublishingDate)
                    </div>
                </div>
                <div class="form-group">
                    @MText(Tags.Label, "AdminModule:::Pages:::Forms:::EndPublishingDate", "End Publishing Date", new { @class = "col-sm-2 no-padding-right control-label", @for = "EndPublishingDate" })
                    <div class="col-sm-10">
                        <div class="input-group col-sm-4">
                            @Html.TextBoxFor(m => m.EndPublishingDate, new { @class = "form-control col-xs-12 date-picker" })
                            <span class="input-group-addon">
                                <i class="icon-calendar bigger-110"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.EndPublishingDate)
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="space-4"></div>
<div class="clearfix form-actions">
    <div class="col-md-offset-1 col-md-9">
        <a class="btn btn-link" href="@Url.Action("Index")">Back To List
        </a>
        <button class="btn btn-primary" type="submit" value="@SubmitTypeEnums.Save" name="Submit">
            <i class="icon-ok bigger-110"></i>
            Save
        </button>
        <button class="btn btn-info" type="submit" value="@SubmitTypeEnums.SaveAndContinueEdit" name="Submit">
            <i class="icon-ok bigger-110"></i>
            Save and Continue Edit
        </button>
        <button class="btn" onclick="location.href= window.location.href;" type="reset">
            <i class="icon-undo bigger-110"></i>
            Reset
        </button>
    </div>
</div>
<link rel="stylesheet" href="@Url.Content("~/Content/backend/css/chosen.css")" />
<script type="text/javascript" src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")"></script>
<script src="@Url.Content("~/Scripts/Backend/chosen.jquery.min.js")"></script>
<script>
    CKEDITOR.replace('pageContent',
    {
        height: '600px',
    });
    $(function () {
        var getCurlyBracketListUrl = "@Url.Action("GetCurlyBracketList", "CurlyBrackets")";
        $.ajax({
            type: "POST",
            url: getCurlyBracketListUrl,
            async: false,
            success: function (data) {
                $.map(data, function (item) {
                    $("#curlyBracketList")
                        .append("<li><a href='javascript:void(0)' onclick='printCurlybracket(\"{"
                            + item.CurlyBracket + "}\")'>" +
                            item.Name + "</a></li>");
                });
            }
        });

        $("#selectParents").change(function () {
            var parent = $(this).val();
            var id = '@Model.Id';
            var data = { id: id, parentId: parent };
            var url = "@Url.Action("GetRelativePages")";
            var selectRelativePages = $("#selectRelativePages");
            $.post(url, data, function (response) {
                selectRelativePages.empty();
                $.each(response, function (index, item) {
                    selectRelativePages.append($('<option></option>')
                        .val(item.Value).html(item.Text));
                });
            });
        });

        $("#selectPageTemplates").change(function () {
            var pageTemplate = $(this).val();
            if(pageTemplate != '') {
                $("#selectFileTemplates").val('');
            }
        });

        $("#selectFileTemplates").change(function () {
            var fileTemplate = $(this).val();
            if (fileTemplate != '') {
                $("#selectPageTemplates").val('');
            }
        });

        $(".chosen-select").chosen();
        $('.chosen-container').each(function () {
            $(this).css('width', '100%');
            $(this).find('input').css('height', 'auto');
        });

        $('.date-picker').datepicker({
            autoclose: true, dateonly: true
        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });
    });
    function printCurlybracket(curlyBracket) {
        CKEDITOR.instances.pageContent.insertText(curlyBracket);
    }
</script>
